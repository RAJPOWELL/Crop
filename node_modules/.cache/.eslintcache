[{"/home/raj/Projects/crop-prediction/src/index.js":"1","/home/raj/Projects/crop-prediction/src/reportWebVitals.js":"2","/home/raj/Projects/crop-prediction/src/App.js":"3","/home/raj/Projects/crop-prediction/src/Components/Home/Home.jsx":"4","/home/raj/Projects/crop-prediction/src/Components/Home/TrialSection.jsx":"5","/home/raj/Projects/crop-prediction/src/Components/Home/TrialSection2.jsx":"6","/home/raj/Projects/crop-prediction/src/Components/Home/LandingSection.jsx":"7","/home/raj/Projects/crop-prediction/src/Components/Home/Footer.jsx":"8","/home/raj/Projects/Crop/src/index.js":"9","/home/raj/Projects/Crop/src/App.js":"10","/home/raj/Projects/Crop/src/reportWebVitals.js":"11","/home/raj/Projects/Crop/src/Components/Home/Home.jsx":"12","/home/raj/Projects/Crop/src/Components/Home/Footer.jsx":"13","/home/raj/Projects/Crop/src/Components/Home/LandingSection.jsx":"14","/home/raj/Projects/Crop/src/Components/Home/TrialSection2.jsx":"15","/home/raj/Projects/Crop/src/Components/Home/TrialSection.jsx":"16"},{"size":364,"mtime":1694956588640,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1694669564145,"results":"19","hashOfConfig":"18"},{"size":248,"mtime":1694669564137,"results":"20","hashOfConfig":"18"},{"size":682,"mtime":1694669564137,"results":"21","hashOfConfig":"18"},{"size":8021,"mtime":1694669564137,"results":"22","hashOfConfig":"18"},{"size":11772,"mtime":1694669564137,"results":"23","hashOfConfig":"18"},{"size":384,"mtime":1694669564137,"results":"24","hashOfConfig":"18"},{"size":657,"mtime":1694956659807,"results":"25","hashOfConfig":"18"},{"size":364,"mtime":1694956588640,"results":"26","hashOfConfig":"27"},{"size":248,"mtime":1694669564137,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1694669564145,"results":"29","hashOfConfig":"27"},{"size":682,"mtime":1694669564137,"results":"30","hashOfConfig":"27"},{"size":840,"mtime":1694976504182,"results":"31","hashOfConfig":"27"},{"size":353,"mtime":1694963387386,"results":"32","hashOfConfig":"27"},{"size":11783,"mtime":1694978013910,"results":"33","hashOfConfig":"27"},{"size":8021,"mtime":1694669564137,"results":"34","hashOfConfig":"27"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uhsrt8",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"ui72ld",{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"55"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"55"},"/home/raj/Projects/crop-prediction/src/index.js",[],"/home/raj/Projects/crop-prediction/src/reportWebVitals.js",[],"/home/raj/Projects/crop-prediction/src/App.js",[],"/home/raj/Projects/crop-prediction/src/Components/Home/Home.jsx",[],"/home/raj/Projects/crop-prediction/src/Components/Home/TrialSection.jsx",["72","73"],"import './TrialSection.scss'\n\nimport React, {useState, useEffect} from 'react'\n\nimport states from './states.json';\nimport districts from './districts2.json';\n\nfunction TrialSection() {\n\n    const [data, setData] = useState(\"\");\n\n    // var N_value;\n    // var P_value;\n    // var K_value;\n    // var Ph_value;\n    // var state_value;\n    // var district_value;\n\n    const [Loading, setLoading] = useState(-1);\n    \n    const [N_value, setN_value] = useState('');\n    const [P_value, setP_value] = useState('');\n    const [K_value, setK_value] = useState('');\n    const [Ph_value, setPh_value] = useState('');\n    const [state_value, setstate_value] = useState('0');\n    const [district_value, setdistrict_value] = useState('0');\n    const [start_month, setstart_month] = useState('1');\n    const [end_month, setend_month] = useState('12');\n    \n    function getData(){\n\n        setLoading(1);\n\n        var requestOptions = {\n            // mode:'no-cors',\n            dataType: 'json',\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ \n                N: N_value, \n                P: P_value, \n                K: K_value, \n                Ph: Ph_value,  \n                state: state_value,  \n                district: district_value,\n                start_month: start_month,\n                end_month: end_month,\n                // N: 10, \n                // P: 10, \n                // K: 10, \n                // Ph: 10,  \n                // state: 'ASSAM',  \n                // district: 'JORHAT',\n                // N: '83', \n                // P: '45', \n                // K: '60', \n                // Ph: '28',  \n                // temprature: '70.3',  \n                // humidity: '7',  \n                // rainfall: '150.9',  \n            })\n        };\n        \n        fetch('http://localhost:5000/crop', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data);\n                setData(data.crop);\n                setLoading(0);\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n\n    return (\n        <div className=\"section trailSection\">\n            <div className=\"trailSectionLeft\">\n                <h1>\n                    Try it out\n                </h1>\n                <h3>\n                    Enter your soil information and get a crop recommendation\n                </h3>\n            </div>\n            <div className=\"trailSectionRight\">\n                <form action=\"http://localhost:5000/crop\" method=\"POST\">\n                    <h3>Soil Data</h3>\n                    <div className=\"inputRow\">\n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"nitrogen\">Nitrogen value</label>\n                            <input name=\"nitrogen\" type=\"text\" placeholder=\"Enter value\" value={N_value}\n                                onInput={e => setN_value(e.target.value)} />\n                        </div>\n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"phosphorus\">Phosphorus value</label>\n                            <input name=\"phosphorus\" type=\"text\" placeholder=\"Enter value\" value={P_value}\n                                onInput={e => setP_value(e.target.value)} />\n                        </div>\n                    </div>\n                    <div className=\"inputRow\">\n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"potassium\">Potassium value</label>\n                            <input name=\"potassium\" type=\"text\" placeholder=\"Enter value\" value={K_value}\n                                onInput={e => setK_value(e.target.value)} />\n                        </div>\n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"ph\">Ph value</label>\n                            <input name=\"ph\" type=\"text\" placeholder=\"Enter value\" value={Ph_value}\n                                onInput={e => setPh_value(e.target.value)}  />\n                        </div>\n                    </div>\n                    <div className=\"inputRow\">\n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"state\">Start month</label>\n                            <select\n                            onChange={f => {setstart_month(f.target.value); }} >\n                                <option value={1} >January</option>\n                                <option value={2} >February</option>\n                                <option value={3} >March</option>\n                                <option value={4} >April</option>\n                                <option value={5} >May</option>\n                                <option value={6} >June</option>\n                                <option value={7} >July</option>\n                                <option value={8} >August</option>\n                                <option value={9} >September</option>\n                                <option value={10} >October</option>\n                                <option value={11} >November</option>\n                                <option value={12} >December</option>\n                            </select>\n                        </div>\n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"district\">End month</label>\n                            <select\n                            onChange={f => {setend_month(f.target.value); }} >\n                                <option value={1} >January</option>\n                                <option value={2} >February</option>\n                                <option value={3} >March</option>\n                                <option value={4} >April</option>\n                                <option value={5} >May</option>\n                                <option value={6} >June</option>\n                                <option value={7} >July</option>\n                                <option value={8} >August</option>\n                                <option value={9} >September</option>\n                                <option value={10} >October</option>\n                                <option value={11} >November</option>\n                                <option value={12} >December</option>\n                            </select>\n                        </div>\n                    </div>\n                    {/* <h3>Location Data</h3> */}\n                    <div className=\"inputRow\">\n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"state\">State</label>\n                            <select\n                            onChange={f => {setstate_value(f.target.value); }} >\n                                {states.map((e, i)=><option value={i} key={i}>{e}</option>)}\n                            </select>\n                        </div>\n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"district\">District</label>\n                            <select\n                            onChange={f => {setdistrict_value(f.target.value);}} >\n                                {districts[state_value].map((e, i)=><option value={i} key={i}>{e}</option>)}\n                            </select>\n                        </div>\n                    </div>\n                    <button onClick={ getData } type=\"button\">Submit</button>\n                    {\n                        Loading == 1 ? \n                        <div className=\"resultDiv\">\n                            Loading....\n                        </div> : \n                        data !== \"\" ?\n                            <div className=\"resultDiv\">\n                                Recommeded Crop: {data}\n                            </div> : null\n                    }\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default TrialSection\n","/home/raj/Projects/crop-prediction/src/Components/Home/TrialSection2.jsx",["74","75","76","77","78","79"],"import './TrialSection.scss'\n\nimport React, {useState, useEffect} from 'react'\n\n// import bg2 from URL('https://images.unsplash.com/photo-1447703693928-9cd89c8d3ac5?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1171&q=80');\n\nimport states from './states.json';\nimport districts from './districts2.json';\nconst soil_type_list = ['Black', 'Clayey', 'Loamy', 'Red', 'Sandy'];\nconst crop_type_list = ['Barley', 'Cotton', 'Ground Nuts', 'Maize', 'Millets', 'Oil seeds', 'Paddy', 'Pulses', 'Sugarcane', 'Tobacco', 'Wheat'];\n\nfunction TrialSection() {\n\n    const [data2, setData2] = useState(\"\");\n\n    const [Loading, setLoading] = useState(-1);\n\n    const [N_value, setN_value] = useState('');\n    const [P_value, setP_value] = useState('');\n    const [K_value, setK_value] = useState('');\n    const [Ph_value, setPh_value] = useState('');\n    const [state_value, setstate_value] = useState('0');\n    const [district_value, setdistrict_value] = useState('0');\n    const [Moisture_value, setMoisture_value] = useState('');\n    const [CropType_value, setCropType_value] = useState('0');\n    const [SoilType_value, setSoilType_value] = useState('0');\n    const [start_month, setstart_month] = useState('1');\n    const [end_month, setend_month] = useState('12');\n\n    function getData(){\n\n        setLoading(1);\n\n        var requestOptions = {\n            // mode:'no-cors',\n            dataType: 'json',\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ \n                N: N_value, \n                P: P_value, \n                K: K_value, \n                // Ph: Ph_value,  \n                state: states[state_value],  \n                district: districts[state_value][district_value],\n                moisture: Moisture_value,\n                soil_type: SoilType_value,\n                // soil_type: soil_type_list[SoilType_value],\n                crop_type: CropType_value,\n                // crop_type: crop_type_list[CropType_value]\n                start_month: start_month,\n                end_month: end_month,\n            })\n        };\n\n        // console.log(requestOptions)\n        \n        fetch('http://localhost:5000/fertilizer', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data);\n                setData2(data.crop);\n                setLoading(0);\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n                setData2(\"Error\")\n            });\n    }\n\n//    console.log('states: ',states);\n//    console.log('districts',districts);\n\n    return (\n        <div className=\"section trailSection\">\n            \n            <div className=\"trailSectionRight\">\n                <form action=\"http://localhost:5000/crop\" method=\"POST\">\n                    <h3>Soil Data</h3>\n                    <div className=\"inputRow\">\n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"nitrogen2\">Nitrogen value</label>\n                            <input name=\"nitrogen2\" type=\"text\" placeholder=\"Enter value\" value={N_value}\n                                onInput={e => setN_value(e.target.value)} />\n                        </div>\n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"phosphorus2\">Phosphorus value</label>\n                            <input name=\"phosphorus2\" type=\"text\" placeholder=\"Enter value\" value={P_value}\n                                onInput={e => setP_value(e.target.value)} />\n                        </div>\n                    </div>\n                    <div className=\"inputRow\">\n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"potassium2\">Potassium value</label>\n                            <input name=\"potassium2\" type=\"text\" placeholder=\"Enter value\" value={K_value}\n                                onInput={e => setK_value(e.target.value)} />\n                        </div>\n                        {/* <div className=\"inputDiv\">\n                            <label htmlFor=\"ph2\">Ph value</label>\n                            <input name=\"ph2\" type=\"text\" placeholder=\"Enter value\" value={Ph_value}\n                                onInput={e => setPh_value(e.target.value)}  />\n                        </div> */}\n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"moisture2\">Moisture value</label>\n                            <input name=\"moisture2\" type=\"text\" placeholder=\"Enter value\" value={Moisture_value}\n                                onInput={e => setMoisture_value(e.target.value)} />\n                        </div>\n                    </div>\n                    <div className=\"inputRow\">\n                        \n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"soilType2\">Soil type</label>\n\n                            <select\n                            onChange={e => {setSoilType_value(e.target.value)}} >\n                                <option value=\"0\">Black</option>\n                                <option value=\"1\">Clayey</option>\n                                <option value=\"2\">Loamy</option>\n                                <option value=\"3\">Red</option>\n                                <option value=\"4\">Sandy</option>\n                            </select>\n\n                            {/* <input name=\"soilType2\" type=\"text\" placeholder=\"Enter value\" value= {SoilType_value}\n                                onInput={e => setSoilType_value(e.target.value)} /> */}\n                        </div>\n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"cropType2\">Crop type</label>\n\n                            <select\n                            onChange={e => {setCropType_value(e.target.value)}} >\n                                <option value=\"0\">Barley</option>\n                                <option value=\"1\">Cotton</option>\n                                <option value=\"2\">Ground Nuts</option>\n                                <option value=\"3\">Maize</option>\n                                <option value=\"4\">Millets</option>\n                                <option value=\"5\">Oil seeds</option>\n                                <option value=\"6\">Paddy</option>\n                                <option value=\"7\">Pulses</option>\n                                <option value=\"8\">Sugarcane</option>\n                                <option value=\"9\">Tobacco</option>\n                                <option value=\"10\">Wheat</option>\n                            </select>\n\n                            {/* <input name=\"cropType2\" type=\"text\" placeholder=\"Enter value\" value={CropType_value}\n                                onInput={e => setCropType_value(e.target.value)}/> */}\n                        </div>\n                    </div>\n                    <div className=\"inputRow\">\n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"state\">Start month</label>\n                            <select\n                            onChange={f => {setstart_month(f.target.value); }} >\n                                <option value={1} >January</option>\n                                <option value={2} >February</option>\n                                <option value={3} >March</option>\n                                <option value={4} >April</option>\n                                <option value={5} >May</option>\n                                <option value={6} >June</option>\n                                <option value={7} >July</option>\n                                <option value={8} >August</option>\n                                <option value={9} >September</option>\n                                <option value={10} >October</option>\n                                <option value={11} >November</option>\n                                <option value={12} >December</option>\n                            </select>\n                        </div>\n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"district\">End month</label>\n                            <select\n                            onChange={f => {setend_month(f.target.value); }} >\n                                <option value={1} >January</option>\n                                <option value={2} >February</option>\n                                <option value={3} >March</option>\n                                <option value={4} >April</option>\n                                <option value={5} >May</option>\n                                <option value={6} >June</option>\n                                <option value={7} >July</option>\n                                <option value={8} >August</option>\n                                <option value={9} >September</option>\n                                <option value={10} >October</option>\n                                <option value={11} >November</option>\n                                <option value={12} >December</option>\n                            </select>\n                        </div>\n                    </div>\n                    {/* <h3>Location Data</h3> */}\n                    <div className=\"inputRow\">\n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"state2\">State</label>\n                            <select\n                            onChange={f => {setstate_value(f.target.value); }} >\n                                {states.map((e, i)=><option value={i} key={i}>{e}</option>)}\n                            </select>\n                                \n                            {/* <input name=\"state2\" type=\"text\" placeholder=\"Enter value\" value={state_value}\n                                onInput={e => setstate_value(e.target.value)} /> */}\n                        </div>\n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"district2\">District</label>\n\n                            <select\n                            onChange={f => {setdistrict_value(f.target.value);}} >\n                                {districts[state_value].map((e, i)=><option value={i} key={i}>{e}</option>)}\n                            </select>\n\n                            {/* <input name=\"district2\" type=\"text\" placeholder=\"Enter value\" value={district_value} \n                                onInput={e => setdistrict_value(e.target.value)} /> */}\n                        </div>\n                    </div>\n                    \n                    <button onClick={ getData } type=\"button\">Submit</button>\n                    {\n                        Loading == 1 ? \n                        <div className=\"resultDiv\">\n                            Loading....\n                        </div> : \n                        data2 !== \"\" ?\n                            <div className=\"resultDiv\">\n                                Recommeded Fertilizer: {data2}\n                            </div> : null\n                    }\n                </form>\n            </div>\n            <div className=\"trailSectionLeft\" style={{backgroundColor:\"black\", backgroundImage: `url(\"https://images.unsplash.com/photo-1559762691-617a33825bc6?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\")`}}>\n                <h1>\n                    Fertilizer \n                </h1>\n                <h3>\n                    Enter your soil information and get a fertilizer recommendation\n                </h3>\n            </div>\n        </div>\n    )\n}\n\nexport default TrialSection\n","/home/raj/Projects/crop-prediction/src/Components/Home/LandingSection.jsx",[],"/home/raj/Projects/crop-prediction/src/Components/Home/Footer.jsx",[],"/home/raj/Projects/Crop/src/index.js",[],["80","81"],"/home/raj/Projects/Crop/src/App.js",[],"/home/raj/Projects/Crop/src/reportWebVitals.js",[],"/home/raj/Projects/Crop/src/Components/Home/Home.jsx",[],"/home/raj/Projects/Crop/src/Components/Home/Footer.jsx",["82","83"],"import React from 'react';\nimport './Footer.scss';\nimport { Link } from 'react-router-dom';\n\n// Import the TTF font\nimport researcherFont from '/home/raj/Projects/Crop/src/Fonts/researcher/ttf/researcher.ttf';\n\n// Define a CSS class for the font\nconst researcherTextStyle = {\n  fontFamily: 'Researcher, sans-serif', // Use the imported font\n  fontSize: '24px',\n  textAlign: 'center',\n   // Increase font weight to bold\n  // You can add other CSS styles like color, etc. here\n};\n\nfunction Footer() {\n  return (\n    <div className=\"section footerSection\">\n      {/* Apply the custom font class to the <p> element */}\n      <p style={researcherTextStyle}><span style={{ fontWeight: 'bold' }}></span></p>\n\n      <div className=\"footerLinksDiv\">\n        {/* Add your footer links here */}\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n\n","/home/raj/Projects/Crop/src/Components/Home/LandingSection.jsx",[],"/home/raj/Projects/Crop/src/Components/Home/TrialSection2.jsx",["84","85","86","87","88","89"],"import './TrialSection.scss'\n\nimport React, {useState, useEffect} from 'react'\n\n// import bg2 from URL('https://images.unsplash.com/photo-1447703693928-9cd89c8d3ac5?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1171&q=80');\n\nimport states from './states.json';\nimport districts from './districts2.json';\nconst soil_type_list = ['Black', 'Clayey', 'Loamy', 'Red', 'Sandy'];\nconst crop_type_list = ['Barley', 'Cotton', 'Ground Nuts', 'Maize', 'Millets', 'Oil seeds', 'Paddy', 'Pulses', 'Sugarcane', 'Tobacco', 'Wheat'];\n\nfunction TrialSection() {\n\n    const [data2, setData2] = useState(\"\");\n\n    const [Loading, setLoading] = useState(-1);\n\n    const [N_value, setN_value] = useState('');\n    const [P_value, setP_value] = useState('');\n    const [K_value, setK_value] = useState('');\n    const [Ph_value, setPh_value] = useState('');\n    const [state_value, setstate_value] = useState('0');\n    const [district_value, setdistrict_value] = useState('0');\n    const [Moisture_value, setMoisture_value] = useState('');\n    const [CropType_value, setCropType_value] = useState('0');\n    const [SoilType_value, setSoilType_value] = useState('0');\n    const [start_month, setstart_month] = useState('1');\n    const [end_month, setend_month] = useState('12');\n\n    function getData(){\n\n        setLoading(1);\n\n        var requestOptions = {\n            // mode:'no-cors',\n            dataType: 'json',\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ \n                N: N_value, \n                P: P_value, \n                K: K_value, \n                // Ph: Ph_value,  \n                state: states[state_value],  \n                district: districts[state_value][district_value],\n                moisture: Moisture_value,\n                soil_type: SoilType_value,\n                // soil_type: soil_type_list[SoilType_value],\n                crop_type: CropType_value,\n                // crop_type: crop_type_list[CropType_value]\n                start_month: start_month,\n                end_month: end_month,\n            })\n        };\n\n        // console.log(requestOptions)\n        \n        fetch('http://localhost:5000/fertilizer', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data);\n                setData2(data.crop);\n                setLoading(0);\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n                setData2(\"Error\")\n            });\n    }\n\n//    console.log('states: ',states);\n//    console.log('districts',districts);\n\n    return (\n        <div className=\"section trailSection\">\n            \n            <div className=\"trailSectionRight\">\n                <form action=\"http://localhost:5000/crop\" method=\"POST\">\n                    <h3>Soil Data</h3>\n                    <div className=\"inputRow\">\n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"nitrogen2\">Nitrogen value</label>\n                            <input name=\"nitrogen2\" type=\"text\" placeholder=\"Enter value\" value={N_value}\n                                onInput={e => setN_value(e.target.value)} />\n                        </div>\n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"phosphorus2\">Phosphorus value</label>\n                            <input name=\"phosphorus2\" type=\"text\" placeholder=\"Enter value\" value={P_value}\n                                onInput={e => setP_value(e.target.value)} />\n                        </div>\n                    </div>\n                    <div className=\"inputRow\">\n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"potassium2\">Potassium value</label>\n                            <input name=\"potassium2\" type=\"text\" placeholder=\"Enter value\" value={K_value}\n                                onInput={e => setK_value(e.target.value)} />\n                        </div>\n                        {/* <div className=\"inputDiv\">\n                            <label htmlFor=\"ph2\">Ph value</label>\n                            <input name=\"ph2\" type=\"text\" placeholder=\"Enter value\" value={Ph_value}\n                                onInput={e => setPh_value(e.target.value)}  />\n                        </div> */}\n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"moisture2\">Moisture value</label>\n                            <input name=\"moisture2\" type=\"text\" placeholder=\"Enter value\" value={Moisture_value}\n                                onInput={e => setMoisture_value(e.target.value)} />\n                        </div>\n                    </div>\n                    <div className=\"inputRow\">\n                        \n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"soilType2\">Soil type</label>\n\n                            <select\n                            onChange={e => {setSoilType_value(e.target.value)}} >\n                                <option value=\"0\">Black</option>\n                                <option value=\"1\">Clayey</option>\n                                <option value=\"2\">Loamy</option>\n                                <option value=\"3\">Red</option>\n                                <option value=\"4\">Sandy</option>\n                            </select>\n\n                            {/* <input name=\"soilType2\" type=\"text\" placeholder=\"Enter value\" value= {SoilType_value}\n                                onInput={e => setSoilType_value(e.target.value)} /> */}\n                        </div>\n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"cropType2\">Crop type</label>\n\n                            <select\n                            onChange={e => {setCropType_value(e.target.value)}} >\n                                <option value=\"0\">Barley</option>\n                                <option value=\"1\">Cotton</option>\n                                <option value=\"2\">Ground Nuts</option>\n                                <option value=\"3\">Maize</option>\n                                <option value=\"4\">Millets</option>\n                                <option value=\"5\">Oil seeds</option>\n                                <option value=\"6\">Paddy</option>\n                                <option value=\"7\">Pulses</option>\n                                <option value=\"8\">Sugarcane</option>\n                                <option value=\"9\">Tobacco</option>\n                                <option value=\"10\">Wheat</option>\n                            </select>\n\n                            {/* <input name=\"cropType2\" type=\"text\" placeholder=\"Enter value\" value={CropType_value}\n                                onInput={e => setCropType_value(e.target.value)}/> */}\n                        </div>\n                    </div>\n                    <div className=\"inputRow\">\n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"state\">Start month</label>\n                            <select\n                            onChange={f => {setstart_month(f.target.value); }} >\n                                <option value={1} >January</option>\n                                <option value={2} >February</option>\n                                <option value={3} >March</option>\n                                <option value={4} >April</option>\n                                <option value={5} >May</option>\n                                <option value={6} >June</option>\n                                <option value={7} >July</option>\n                                <option value={8} >August</option>\n                                <option value={9} >September</option>\n                                <option value={10} >October</option>\n                                <option value={11} >November</option>\n                                <option value={12} >December</option>\n                            </select>\n                        </div>\n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"district\">End month</label>\n                            <select\n                            onChange={f => {setend_month(f.target.value); }} >\n                                <option value={1} >January</option>\n                                <option value={2} >February</option>\n                                <option value={3} >March</option>\n                                <option value={4} >April</option>\n                                <option value={5} >May</option>\n                                <option value={6} >June</option>\n                                <option value={7} >July</option>\n                                <option value={8} >August</option>\n                                <option value={9} >September</option>\n                                <option value={10} >October</option>\n                                <option value={11} >November</option>\n                                <option value={12} >December</option>\n                            </select>\n                        </div>\n                    </div>\n                    {/* <h3>Location Data</h3> */}\n                    <div className=\"inputRow\">\n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"state2\">State</label>\n                            <select\n                            onChange={f => {setstate_value(f.target.value); }} >\n                                {states.map((e, i)=><option value={i} key={i}>{e}</option>)}\n                            </select>\n                                \n                            {/* <input name=\"state2\" type=\"text\" placeholder=\"Enter value\" value={state_value}\n                                onInput={e => setstate_value(e.target.value)} /> */}\n                        </div>\n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"district2\">District</label>\n\n                            <select\n                            onChange={f => {setdistrict_value(f.target.value);}} >\n                                {districts[state_value].map((e, i)=><option value={i} key={i}>{e}</option>)}\n                            </select>\n\n                            {/* <input name=\"district2\" type=\"text\" placeholder=\"Enter value\" value={district_value} \n                                onInput={e => setdistrict_value(e.target.value)} /> */}\n                        </div>\n                    </div>\n                    \n                    <button onClick={ getData } type=\"button\">Submit</button>\n                    {\n                        Loading == 1 ? \n                        <div className=\"resultDiv\">\n                            Loading....\n                        </div> : \n                        data2 !== \"\" ?\n                            <div className=\"resultDiv\">\n                                Recommeded Fertilizer: {data2}\n                            </div> : null\n                    }\n                </form>\n            </div>\n            <div className=\"trailSectionLeft\" style={{backgroundColor:\"black\", backgroundImage: `url(\"https://images.unsplash.com/photo-1506500072623-b8c2a36a047e?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1935&q=80\")`}}>\n                <h1>\n                    Fertilizer \n                </h1>\n                <h3>\n                    Enter your soil information and get a fertilizer recommendation\n                </h3>\n            </div>\n        </div>\n    )\n}\n\nexport default TrialSection\n","/home/raj/Projects/Crop/src/Components/Home/TrialSection.jsx",["90","91"],{"ruleId":"92","severity":1,"message":"93","line":3,"column":26,"nodeType":"94","messageId":"95","endLine":3,"endColumn":35},{"ruleId":"96","severity":1,"message":"97","line":170,"column":33,"nodeType":"98","messageId":"99","endLine":170,"endColumn":35},{"ruleId":"92","severity":1,"message":"93","line":3,"column":26,"nodeType":"94","messageId":"95","endLine":3,"endColumn":35},{"ruleId":"92","severity":1,"message":"100","line":9,"column":7,"nodeType":"94","messageId":"95","endLine":9,"endColumn":21},{"ruleId":"92","severity":1,"message":"101","line":10,"column":7,"nodeType":"94","messageId":"95","endLine":10,"endColumn":21},{"ruleId":"92","severity":1,"message":"102","line":21,"column":12,"nodeType":"94","messageId":"95","endLine":21,"endColumn":20},{"ruleId":"92","severity":1,"message":"103","line":21,"column":22,"nodeType":"94","messageId":"95","endLine":21,"endColumn":33},{"ruleId":"96","severity":1,"message":"97","line":213,"column":33,"nodeType":"98","messageId":"99","endLine":213,"endColumn":35},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"92","severity":1,"message":"108","line":3,"column":10,"nodeType":"94","messageId":"95","endLine":3,"endColumn":14},{"ruleId":"92","severity":1,"message":"109","line":6,"column":8,"nodeType":"94","messageId":"95","endLine":6,"endColumn":22},{"ruleId":"92","severity":1,"message":"93","line":3,"column":26,"nodeType":"94","messageId":"95","endLine":3,"endColumn":35},{"ruleId":"92","severity":1,"message":"100","line":9,"column":7,"nodeType":"94","messageId":"95","endLine":9,"endColumn":21},{"ruleId":"92","severity":1,"message":"101","line":10,"column":7,"nodeType":"94","messageId":"95","endLine":10,"endColumn":21},{"ruleId":"92","severity":1,"message":"102","line":21,"column":12,"nodeType":"94","messageId":"95","endLine":21,"endColumn":20},{"ruleId":"92","severity":1,"message":"103","line":21,"column":22,"nodeType":"94","messageId":"95","endLine":21,"endColumn":33},{"ruleId":"96","severity":1,"message":"97","line":213,"column":33,"nodeType":"98","messageId":"99","endLine":213,"endColumn":35},{"ruleId":"92","severity":1,"message":"93","line":3,"column":26,"nodeType":"94","messageId":"95","endLine":3,"endColumn":35},{"ruleId":"96","severity":1,"message":"97","line":170,"column":33,"nodeType":"98","messageId":"99","endLine":170,"endColumn":35},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'soil_type_list' is assigned a value but never used.","'crop_type_list' is assigned a value but never used.","'Ph_value' is assigned a value but never used.","'setPh_value' is assigned a value but never used.","no-native-reassign",["110"],"no-negated-in-lhs",["111"],"'Link' is defined but never used.","'researcherFont' is defined but never used.","no-global-assign","no-unsafe-negation"]