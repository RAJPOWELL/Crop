{"ast":null,"code":"var _jsxFileName = \"/home/raj/Projects/crop-prediction/src/Components/Home/TrialSection.jsx\",\n    _s = $RefreshSig$();\n\nimport './TrialSection.scss';\nimport React, { useState, useEffect } from 'react';\nimport states from './states.json';\nimport districts from './districts2.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TrialSection() {\n  _s();\n\n  const [data, setData] = useState(\"\"); // var N_value;\n  // var P_value;\n  // var K_value;\n  // var Ph_value;\n  // var state_value;\n  // var district_value;\n\n  const [Loading, setLoading] = useState(-1);\n  const [N_value, setN_value] = useState('');\n  const [P_value, setP_value] = useState('');\n  const [K_value, setK_value] = useState('');\n  const [Ph_value, setPh_value] = useState('');\n  const [state_value, setstate_value] = useState('0');\n  const [district_value, setdistrict_value] = useState('0');\n  const [start_month, setstart_month] = useState('1');\n  const [end_month, setend_month] = useState('12');\n\n  function getData() {\n    setLoading(1);\n    var requestOptions = {\n      // mode:'no-cors',\n      dataType: 'json',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        N: N_value,\n        P: P_value,\n        K: K_value,\n        Ph: Ph_value,\n        state: state_value,\n        district: district_value,\n        start_month: start_month,\n        end_month: end_month // N: 10, \n        // P: 10, \n        // K: 10, \n        // Ph: 10,  \n        // state: 'ASSAM',  \n        // district: 'JORHAT',\n        // N: '83', \n        // P: '45', \n        // K: '60', \n        // Ph: '28',  \n        // temprature: '70.3',  \n        // humidity: '7',  \n        // rainfall: '150.9',  \n\n      })\n    };\n    fetch('http://localhost:5000/crop', requestOptions).then(response => response.json()).then(data => {\n      console.log(data);\n      setData(data.crop);\n      setLoading(0);\n    }).catch(error => {\n      console.error('There was an error!', error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section trailSection\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trailSectionLeft\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Try it out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Enter your soil information and get a crop recommendation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trailSectionRight\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"http://localhost:5000/crop\",\n        method: \"POST\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Soil Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputRow\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputDiv\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"nitrogen\",\n              children: \"Nitrogen value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"nitrogen\",\n              type: \"text\",\n              placeholder: \"Enter value\",\n              value: N_value,\n              onInput: e => setN_value(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputDiv\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"phosphorus\",\n              children: \"Phosphorus value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"phosphorus\",\n              type: \"text\",\n              placeholder: \"Enter value\",\n              value: P_value,\n              onInput: e => setP_value(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputRow\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputDiv\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"potassium\",\n              children: \"Potassium value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"potassium\",\n              type: \"text\",\n              placeholder: \"Enter value\",\n              value: K_value,\n              onInput: e => setK_value(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputDiv\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"ph\",\n              children: \"Ph value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"ph\",\n              type: \"text\",\n              placeholder: \"Enter value\",\n              value: Ph_value,\n              onInput: e => setPh_value(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputRow\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputDiv\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"state\",\n              children: \"Start month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: f => {\n                setstart_month(f.target.value);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: 1,\n                children: \"January\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 2,\n                children: \"February\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 3,\n                children: \"March\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 4,\n                children: \"April\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 5,\n                children: \"May\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 6,\n                children: \"June\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 7,\n                children: \"July\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 8,\n                children: \"August\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 9,\n                children: \"September\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 10,\n                children: \"October\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 11,\n                children: \"November\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 12,\n                children: \"December\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputDiv\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"district\",\n              children: \"End month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: f => {\n                setend_month(f.target.value);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: 1,\n                children: \"January\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 2,\n                children: \"February\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 3,\n                children: \"March\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 4,\n                children: \"April\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 5,\n                children: \"May\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 6,\n                children: \"June\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 7,\n                children: \"July\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 8,\n                children: \"August\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 9,\n                children: \"September\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 10,\n                children: \"October\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 11,\n                children: \"November\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 12,\n                children: \"December\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputRow\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputDiv\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"state\",\n              children: \"State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: f => {\n                setstate_value(f.target.value);\n              },\n              children: states.map((e, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: i,\n                children: e\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 53\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputDiv\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"district\",\n              children: \"District\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: f => {\n                setdistrict_value(f.target.value);\n              },\n              children: districts[state_value].map((e, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: i,\n                children: e\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 69\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getData,\n          type: \"button\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), Loading == 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resultDiv\",\n          children: \"Loading....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }, this) : data !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resultDiv\",\n          children: [\"Recommeded Crop: \", data]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 29\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TrialSection, \"uplooYxYwCfdH4fyrPkOZBBzQcw=\");\n\n_c = TrialSection;\nexport default TrialSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrialSection\");","map":{"version":3,"sources":["/home/raj/Projects/crop-prediction/src/Components/Home/TrialSection.jsx"],"names":["React","useState","useEffect","states","districts","TrialSection","data","setData","Loading","setLoading","N_value","setN_value","P_value","setP_value","K_value","setK_value","Ph_value","setPh_value","state_value","setstate_value","district_value","setdistrict_value","start_month","setstart_month","end_month","setend_month","getData","requestOptions","dataType","method","headers","body","JSON","stringify","N","P","K","Ph","state","district","fetch","then","response","json","console","log","crop","catch","error","e","target","value","f","map","i"],"mappings":"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","sourcesContent":["import './TrialSection.scss'\n\nimport React, {useState, useEffect} from 'react'\n\nimport states from './states.json';\nimport districts from './districts2.json';\n\nfunction TrialSection() {\n\n    const [data, setData] = useState(\"\");\n\n    // var N_value;\n    // var P_value;\n    // var K_value;\n    // var Ph_value;\n    // var state_value;\n    // var district_value;\n\n    const [Loading, setLoading] = useState(-1);\n    \n    const [N_value, setN_value] = useState('');\n    const [P_value, setP_value] = useState('');\n    const [K_value, setK_value] = useState('');\n    const [Ph_value, setPh_value] = useState('');\n    const [state_value, setstate_value] = useState('0');\n    const [district_value, setdistrict_value] = useState('0');\n    const [start_month, setstart_month] = useState('1');\n    const [end_month, setend_month] = useState('12');\n    \n    function getData(){\n\n        setLoading(1);\n\n        var requestOptions = {\n            // mode:'no-cors',\n            dataType: 'json',\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ \n                N: N_value, \n                P: P_value, \n                K: K_value, \n                Ph: Ph_value,  \n                state: state_value,  \n                district: district_value,\n                start_month: start_month,\n                end_month: end_month,\n                // N: 10, \n                // P: 10, \n                // K: 10, \n                // Ph: 10,  \n                // state: 'ASSAM',  \n                // district: 'JORHAT',\n                // N: '83', \n                // P: '45', \n                // K: '60', \n                // Ph: '28',  \n                // temprature: '70.3',  \n                // humidity: '7',  \n                // rainfall: '150.9',  \n            })\n        };\n        \n        fetch('http://localhost:5000/crop', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data);\n                setData(data.crop);\n                setLoading(0);\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n\n    return (\n        <div className=\"section trailSection\">\n            <div className=\"trailSectionLeft\">\n                <h1>\n                    Try it out\n                </h1>\n                <h3>\n                    Enter your soil information and get a crop recommendation\n                </h3>\n            </div>\n            <div className=\"trailSectionRight\">\n                <form action=\"http://localhost:5000/crop\" method=\"POST\">\n                    <h3>Soil Data</h3>\n                    <div className=\"inputRow\">\n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"nitrogen\">Nitrogen value</label>\n                            <input name=\"nitrogen\" type=\"text\" placeholder=\"Enter value\" value={N_value}\n                                onInput={e => setN_value(e.target.value)} />\n                        </div>\n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"phosphorus\">Phosphorus value</label>\n                            <input name=\"phosphorus\" type=\"text\" placeholder=\"Enter value\" value={P_value}\n                                onInput={e => setP_value(e.target.value)} />\n                        </div>\n                    </div>\n                    <div className=\"inputRow\">\n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"potassium\">Potassium value</label>\n                            <input name=\"potassium\" type=\"text\" placeholder=\"Enter value\" value={K_value}\n                                onInput={e => setK_value(e.target.value)} />\n                        </div>\n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"ph\">Ph value</label>\n                            <input name=\"ph\" type=\"text\" placeholder=\"Enter value\" value={Ph_value}\n                                onInput={e => setPh_value(e.target.value)}  />\n                        </div>\n                    </div>\n                    <div className=\"inputRow\">\n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"state\">Start month</label>\n                            <select\n                            onChange={f => {setstart_month(f.target.value); }} >\n                                <option value={1} >January</option>\n                                <option value={2} >February</option>\n                                <option value={3} >March</option>\n                                <option value={4} >April</option>\n                                <option value={5} >May</option>\n                                <option value={6} >June</option>\n                                <option value={7} >July</option>\n                                <option value={8} >August</option>\n                                <option value={9} >September</option>\n                                <option value={10} >October</option>\n                                <option value={11} >November</option>\n                                <option value={12} >December</option>\n                            </select>\n                        </div>\n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"district\">End month</label>\n                            <select\n                            onChange={f => {setend_month(f.target.value); }} >\n                                <option value={1} >January</option>\n                                <option value={2} >February</option>\n                                <option value={3} >March</option>\n                                <option value={4} >April</option>\n                                <option value={5} >May</option>\n                                <option value={6} >June</option>\n                                <option value={7} >July</option>\n                                <option value={8} >August</option>\n                                <option value={9} >September</option>\n                                <option value={10} >October</option>\n                                <option value={11} >November</option>\n                                <option value={12} >December</option>\n                            </select>\n                        </div>\n                    </div>\n                    {/* <h3>Location Data</h3> */}\n                    <div className=\"inputRow\">\n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"state\">State</label>\n                            <select\n                            onChange={f => {setstate_value(f.target.value); }} >\n                                {states.map((e, i)=><option value={i} key={i}>{e}</option>)}\n                            </select>\n                        </div>\n                        <div className=\"inputDiv\">\n                            <label htmlFor=\"district\">District</label>\n                            <select\n                            onChange={f => {setdistrict_value(f.target.value);}} >\n                                {districts[state_value].map((e, i)=><option value={i} key={i}>{e}</option>)}\n                            </select>\n                        </div>\n                    </div>\n                    <button onClick={ getData } type=\"button\">Submit</button>\n                    {\n                        Loading == 1 ? \n                        <div className=\"resultDiv\">\n                            Loading....\n                        </div> : \n                        data !== \"\" ?\n                            <div className=\"resultDiv\">\n                                Recommeded Crop: {data}\n                            </div> : null\n                    }\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default TrialSection\n"]},"metadata":{},"sourceType":"module"}